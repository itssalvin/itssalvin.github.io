This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repopack on: 2024-11-01T12:59:25.241Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Repository structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repopack's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.

Additional Info:
----------------

For more information about Repopack, visit: https://github.com/yamadashy/repopack

================================================================
Repository Structure
================================================================
CNAME
index.html
script.js
style.css

================================================================
Repository Files
================================================================

================
File: CNAME
================
www.coolerthanyou.top

================
File: index.html
================
<!DOCTYPE html>
<html lang="en" >
<head>
  <meta charset="UTF-8">
  <title>Ê†ëÊ†ë</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<script src="https://kit.fontawesome.com/6f917e9db0.js" crossorigin="anonymous"></script>
<link rel="preconnect" href="https://fonts.gstatic.com">
<link href="https://fonts.googleapis.com/css2?family=Lato&display=swap" rel="stylesheet"><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/normalize/5.0.0/normalize.min.css">
<link rel="stylesheet" href="./style.css">
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Rubik+Wet+Paint&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css2?family=DynaPuff:wght@400..700&family=Rubik+Wet+Paint&display=swap" rel="stylesheet">



</head>
<body>
<!-- partial:index.partial.html -->
<div class="outer-container">
  <audio id="track"></audio>
  <video id="video-background" loop muted playsinline style="display: none">
    <source src="video.mp4" type="video/mp4">
  </video>
  <img src="1.png" id="background">
 
  
</div>

<div class="player-container">
  <img src="gouzi.png" alt="Harry Styles' Fine Line album cover" id="thumbnail" />
  <div class="box-wrapper">
    <div class="box">
      <div class="play-pause">
        <span class="vampire-btn">üßõ</span>
      </div>
      <div class="track-info">
        <div id="track-artist">playboi carti</div>
        <div id="track-title">2024</div>
      </div>
      <div class="next-prev">
          <button id="prev-track">üëàüèª</button>
          <button id="next-track">üëâüèæ</button>
      </div>
      <div class="progress-bar">
        <svg id="progress" viewBox="0 0 100 100" width="100%" height="30">
          <g fill="none" stroke-width="3" stroke-linecap="round" stroke-linejoin="round">
            <!-- ËÉåÊôØÁ∫ø -->
            <path stroke="rgba(255, 255, 255, 0.2)" d="M 0 50 12.5 50 18.75 65.5 25 50 37.5 50 43.75 34.1 56.25 60.87 62.5 50 68.75 50 75 15.38 81.25 50 87.5 50 93.75 71.33 100 50"/>
            <!-- ËøõÂ∫¶Á∫ø -->
            <path stroke="currentColor" class="progress-path" d="M 0 50 12.5 50 18.75 65.5 25 50 37.5 50 43.75 34.1 56.25 60.87 62.5 50 68.75 50 75 15.38 81.25 50 87.5 50 93.75 71.33 100 50"/>
          </g>
          <!-- Ê∑ªÂä†Ë∑üË∏™ÁÇπ -->
          <circle id="progress-dot" cx="0" cy="50" r="3" />
        </svg>
        </svg>
      </div>
      <div class="track-time">
        <div id="currentTime"></div>
        <div id="durationTime"></div>
      </div>
    </div>
  </div>
</div>
<!-- partial -->
  <script  src="./script.js"></script>

</body>
</html>

================
File: script.js
================
// ÂèòÈáèÂ£∞Êòé
const track = document.getElementById("track");
const thumbnail = document.getElementById("thumbnail");
const background = document.getElementById("background");
const trackArtist = document.getElementById("track-artist");
const trackTitle = document.getElementById("track-title");
const currentTime = document.getElementById("currentTime");
const durationTime = document.getElementById("durationTime");
const vampireBtn = document.querySelector('.vampire-btn');
const videoBackground = document.getElementById('video-background');
const progressBar = document.querySelector('#progress');
const progressDot = document.querySelector('#progress-dot');
const progressPath = document.querySelector('.progress-path');

let trackIndex = 0;
let playing = true;
let isDragging = false;

// Èü≥‰πêÂàóË°®Êï∞ÊçÆ
const tracks = ["2024.mp3", "righteous.mp3", "nonstop.mp3", "SOUTH OF FRANCE .mp3"];
const thumbnails = ["2.png", "juicewrld.png", "drake.png", "france.png"];
const trackArtists = ["playboi carti", "juice wrld", "drake", "future"];
const trackTitles = ["2024", "righteous", "nonstop", "SOUTH OF FRANCE"];

// Êó∂Èó¥Ê†ºÂºèÂåñÂáΩÊï∞
function formatTime(sec) {
    if (isNaN(sec)) return "0:00";
    let minutes = Math.floor(sec / 60);
    let seconds = Math.floor(sec - minutes * 60);
    if (seconds < 10) {
        seconds = `0${seconds}`;
    }
    return `${minutes}:${seconds}`;
}

// ËøõÂ∫¶Êù°Êõ¥Êñ∞ÂáΩÊï∞
function updateProgress() {
    if (!isDragging) {
        const progressPath = document.querySelector('.progress-path');
        const length = progressPath.getTotalLength();
        
        // ËÆæÁΩÆÊÄªÈïøÂ∫¶
        progressPath.style.strokeDasharray = `${length} ${length}`;
        
        // ËÆ°ÁÆóËøõÂ∫¶
        const progress = (track.currentTime / track.duration) || 0;
        const dashOffset = length - (progress * length);
        progressPath.style.strokeDashoffset = dashOffset;

        // Âè™Âú®ÊÇ¨ÂÅúÊàñÊãñÂä®Êó∂Êõ¥Êñ∞Ë∑üË∏™ÁÇπ‰ΩçÁΩÆ
        if (progressBar.matches(':hover') || isDragging) {
            progressDot.style.display = 'block';
            const pointOnPath = progressPath.getPointAtLength(progress * length);
            progressDot.setAttribute('cx', pointOnPath.x);
            progressDot.setAttribute('cy', pointOnPath.y);
        } else {
            progressDot.style.display = 'none';
        }
    }
    
    // Êõ¥Êñ∞Êó∂Èó¥ÊòæÁ§∫
    currentTime.textContent = formatTime(track.currentTime);
    durationTime.textContent = formatTime(track.duration);
    
    requestAnimationFrame(updateProgress);
}

// ËøõÂ∫¶Êù°‰∫§‰∫íÂ§ÑÁêÜÂáΩÊï∞
function handleProgressInteraction(e) {
    const rect = progressBar.getBoundingClientRect();
    
    // ËÆ°ÁÆóÁôæÂàÜÊØîÂπ∂ÈôêÂà∂Âú® 0-1 ‰πãÈó¥
    const clickX = Math.max(rect.left, Math.min(e.clientX, rect.right));
    const percentage = Math.max(0, Math.min(1, (clickX - rect.left) / rect.width));
    
    // Ëé∑ÂèñÂÆûÈôÖË∑ØÂæÑ‰∏äÁöÑÁÇπ
    const pathLength = progressPath.getTotalLength();
    const pointOnPath = progressPath.getPointAtLength(percentage * pathLength);
    
    // Áõ¥Êé•‰ΩøÁî®Ë∑ØÂæÑ‰∏äÁöÑÁÇπÂùêÊ†á
    progressDot.setAttribute('cx', pointOnPath.x);
    progressDot.setAttribute('cy', pointOnPath.y);
    
    // Êõ¥Êñ∞ËøõÂ∫¶Êù°
    progressPath.style.strokeDashoffset = pathLength - (percentage * pathLength);
    
    // Êõ¥Êñ∞Èü≥È¢ëÊó∂Èó¥
    if (!isNaN(track.duration)) {
        track.currentTime = percentage * track.duration;
    }
}

// Êõ¥Êñ∞Êõ≤ÁõÆÂáΩÊï∞
function updateTrack() {
    track.src = tracks[trackIndex];
    thumbnail.src = thumbnails[trackIndex];
    
    if (trackTitles[trackIndex] === "SOUTH OF FRANCE") {
        background.style.display = 'none';
        videoBackground.style.display = 'block';
        videoBackground.play().catch(e => console.log('Video play error:', e));
    } else {
        background.style.display = 'block';
        videoBackground.style.display = 'none';
        videoBackground.pause();
        background.src = thumbnails[trackIndex];
    }
    
    trackArtist.textContent = trackArtists[trackIndex];
    trackTitle.textContent = trackTitles[trackIndex];
    
    if (trackIndex === 0 && !track.currentTime) {
        vampireBtn.classList.remove('playing');
        thumbnail.style.transform = "scale(1)";
    } else {
        track.play().catch(e => console.log('Audio play error:', e));
        vampireBtn.classList.add('playing');
        thumbnail.style.transform = "scale(1.25)";
    }
}

// Êí≠ÊîæÊéßÂà∂ÂáΩÊï∞
function pausePlay() {
    if (playing) {
        vampireBtn.classList.add('playing');
        thumbnail.style.transform = "scale(1.25)";
        track.play().catch(error => {
            console.log("Audio play error:", error);
        });
        playing = false;
    } else {
        vampireBtn.classList.remove('playing');
        thumbnail.style.transform = "scale(1)";
        track.pause();
        playing = true;
    }
}

// ÂàáÊç¢Êõ≤ÁõÆÂáΩÊï∞
function nextTrack() {
    trackIndex = (trackIndex + 1) % tracks.length;
    updateTrack();
}

function prevTrack() {
    trackIndex = (trackIndex - 1 + tracks.length) % tracks.length;
    updateTrack();
}

// ÂàùÂßãÂåñ
document.addEventListener('DOMContentLoaded', () => {
    // ÂàùÂßãÂåñÈü≥‰πêÊí≠ÊîæÂô®
    updateTrack();
    
    // ËøõÂ∫¶Êù°Èº†Ê†áËøõÂÖ•‰∫ã‰ª∂
    progressBar.addEventListener('mouseenter', () => {
        progressDot.style.display = 'block';
        const progress = (track.currentTime / track.duration) || 0;
        const length = progressPath.getTotalLength();
        const point = progressPath.getPointAtLength(progress * length);
        progressDot.setAttribute('cx', point.x);
        progressDot.setAttribute('cy', point.y);
    });
    
    // ËøõÂ∫¶Êù°Èº†Ê†áÁ¶ªÂºÄ‰∫ã‰ª∂
    progressBar.addEventListener('mouseleave', () => {
        if (!isDragging) {
            progressDot.style.display = 'none';
        }
    });
    
    // ËøõÂ∫¶Êù°ÁÇπÂáª‰∫ã‰ª∂
    progressBar.addEventListener('click', (e) => {
        if (!isDragging) {
            handleProgressInteraction(e);
        }
    });
    
    // ËøõÂ∫¶Êù°Êåâ‰∏ã‰∫ã‰ª∂ÔºàÂºÄÂßãÊãñÂä®Ôºâ
    progressBar.addEventListener('mousedown', (e) => {
        isDragging = true;
        progressBar.classList.add('dragging');
        progressDot.classList.add('active');
        handleProgressInteraction(e);
        if (!playing) {
            track.pause();
        }
    });
    
    // ÂÖ®Â±ÄÈº†Ê†áÁßªÂä®‰∫ã‰ª∂ÔºàÊãñÂä®‰∏≠Ôºâ
    document.addEventListener('mousemove', (e) => {
        if (isDragging) {
            handleProgressInteraction(e);
            progressDot.style.display = 'block';
        }
    });
    
    // ÂÖ®Â±ÄÈº†Ê†áÊùæÂºÄ‰∫ã‰ª∂ÔºàÁªìÊùüÊãñÂä®Ôºâ
    document.addEventListener('mouseup', () => {
        if (isDragging) {
            isDragging = false;
            progressBar.classList.remove('dragging');
            progressDot.classList.remove('active');
            if (!playing) {
                track.play();
            }
            if (!progressBar.matches(':hover')) {
                progressDot.style.display = 'none';
            }
        }
    });
    
    // Êí≠ÊîæÊéßÂà∂
    vampireBtn.addEventListener('click', pausePlay);
    
    // ÂàáÊç¢Êõ≤ÁõÆÊåâÈíÆ
    document.getElementById('next-track').addEventListener('click', nextTrack);
    document.getElementById('prev-track').addEventListener('click', prevTrack);
    
    // Êí≠ÊîæÁªìÊùüËá™Âä®‰∏ã‰∏ÄÊõ≤
    track.addEventListener('ended', nextTrack);
    
    // ÂêØÂä®ËøõÂ∫¶Êõ¥Êñ∞
    requestAnimationFrame(updateProgress);
    
    // ÈîôËØØÂ§ÑÁêÜ
    track.addEventListener('error', (e) => {
        console.log("Audio error:", e);
    });
    
    videoBackground.addEventListener('error', (e) => {
        console.log("Video error:", e);
    });
    
    // Èò≤Ê≠¢ÊãñÂä®Ë∂ÖÂá∫Á™óÂè£
    document.addEventListener('mouseleave', () => {
        if (isDragging) {
            isDragging = false;
            progressBar.classList.remove('dragging');
            progressDot.classList.remove('active');
            if (!playing) {
                track.play();
            }
            progressDot.style.display = 'none';
        }
    });
});

================
File: style.css
================
/* Âü∫Á°ÄÊ†∑Âºè */
#background, #video-background {
  object-fit: cover;
  height: 100vh;
  width: 100vw;
  margin: auto;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: -1;
}

#background {
  filter: blur(7px);
}

#video-background {
  filter: blur(2px);
  transition: filter 0.3s ease;
}

#video-background:hover {
  filter: blur(1px);
}

/* ÂÆπÂô®Ê†∑Âºè */
.outer-container {
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
}

.player-container {
  display: flex;
  flex-direction: column;
  position: absolute;
  height: 400px;
  width: 325px;
  margin: auto;
  top: 0;
  left: 0;
  right: 0; 
  bottom: 0;
  overflow: hidden;
  justify-content: center;
  align-items: center;
  border-radius: 30px;
  box-shadow: 0 0 30px #f94c57;
}

/* Áº©Áï•ÂõæÊ†∑Âºè */
#thumbnail {
  position: absolute;
  object-fit: fill;
  height: 100%;
  width: 100%;
  transition: 1s;
  z-index: 3;
}

/* ÊéßÂà∂Èù¢ÊùøÊ†∑Âºè */
.box-wrapper {
  position: absolute;
  border-radius: 20px;
  height: 45%;
  width: 100%;
  bottom: -10%;
  z-index: 5;
  background: linear-gradient(
    135deg,
    rgba(255, 255, 255, 0.1) 0%,
    rgba(255, 255, 255, 0.05) 50%,
    rgba(255, 255, 255, 0) 100%
  );
  backdrop-filter: blur(12px);
  -webkit-backdrop-filter: blur(12px);
}

.box {
  position: absolute;
  height: 100%;
  width: 100%;
  top: 0;
  left: 0;
  display: grid;
  grid-template-columns: 35px 200px 80px;
  grid-template-rows: 85px 25px 25px;
  grid-template-areas:
    "one two three"
    "four four four"
    "five five five";
  column-gap: 10px;
  overflow: hidden;
  opacity: 1;
  box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, 
              rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, 
              rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;
}

/* Êí≠ÊîæÊéßÂà∂ÊåâÈíÆÊ†∑Âºè */
.play-pause {
  grid-area: one;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100%;
  padding: 10px;
}

.vampire-btn {
  font-size: 1.5rem;
  filter: grayscale(100%);
  transition: all 450ms ease;
  cursor: pointer;
  margin: 0;
  padding: 0;
  line-height: 1;
}

.vampire-btn.playing {
  filter: grayscale(0%) drop-shadow(0 8px 8px rgba(249, 76, 87, 0.5));
}

.vampire-btn:hover {
  transform: scale(1.55);
}

/* Êõ≤ÁõÆ‰ø°ÊÅØÊ†∑Âºè */
.track-info {
  grid-area: two;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  padding-left: 5%;
}

#track-artist {
  color: #f94c57;
  font-family: "DynaPuff", sans-serif;
  font-weight: bold;
  font-size: 1.125rem;
  text-shadow: 0 0 15px white;
}

#track-title {
  color: white;
  font-family: "Rubik Wet Paint", sans-serif;
  font-size: 1rem;
}

/* ÂØºËà™ÊåâÈíÆÊ†∑Âºè */
.next-prev {
  grid-area: three;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;
  width: 100%;
  height: 100%;
  padding-top: 15px;
  padding-right: 30px;
  margin-right: 20px;
}

.next-prev button {
  background: none;
  border: none;
  cursor: pointer;
  font-size: 1.6rem;
  padding: 3px;
  color: #333;
  transition: transform 0.2s ease;
  margin: 2px 0;
}

.next-prev button:hover {
  transform: scale(1.3);
  color: #000;
}

/* ËøõÂ∫¶Êù°Ê†∑Âºè */
.progress-bar {
  grid-area: four;
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
}

#progress {
  width: 57.5%;
  height: 130px;
  fill: none;
  color: #7c63de;
}

.progress-path {
  stroke: #7c63de;
  stroke-width: 3;
  stroke-dasharray: 0;
  stroke-dashoffset: 0;
  transition: stroke-dashoffset 0.1s linear;
  filter: drop-shadow(0 0 2px #7c63de);
}

#progress:hover .progress-path {
  stroke: #8b74e8;
  filter: drop-shadow(0 0 4px #7c63de);
  stroke-width: 4;
}

#progress.dragging .progress-path {
  stroke: #9985ff;
  filter: drop-shadow(0 0 8px #7c63de);
  stroke-width: 5;
}

/* ËøõÂ∫¶ÁÇπÂä®Áîª */
@keyframes empPulse {
    0% {
        fill: #002fa7;
        r: 2;
        filter: drop-shadow(0 0 2px #39FF14);
    }
    25% {
        fill:   #002fa7;
        r: 3.5;
        filter: drop-shadow(0 0 8px #b002ad) 
                drop-shadow(0 0 15px #c9058e) 
                drop-shadow(0 0 25px #c203bf);
    }
    50% {
        fill:   #002fa7;
        r: 2;
        filter: drop-shadow(0 0 2px #ff8da1);
    }
    75% {
        fill: #002fa7;
        r: 3.5;
        filter: drop-shadow(0 0 12px #ff8da1) 
                drop-shadow(0 0 20px #39FF14) 
                drop-shadow(0 0 30px #ff8da1);
    }
    100% {
        fill:  #002fa7;
        r: 3;
        filter: drop-shadow(0 0 2px #ff8da1);
    }
}


@keyframes activePulse {
  0% {
     fill: #002fa7;
        r: 2;
        filter: drop-shadow(0 0 2px #39FF14);
  }
  50% {
    fill:   #002fa7;
    r: 3.5;
    filter: drop-shadow(0 0 8px #39FF14) 
            drop-shadow(0 0 15px #39FF14) 
            drop-shadow(0 0 25px #39FF14);
  }
  100% {
    fill:  #002fa7;
    r: 3;
    filter: drop-shadow(0 0 2px #39FF14);
  }
}

#progress-dot {
  fill: #002fa7;
  r: 2.5;
  transform-origin: center;
  pointer-events: none;
  display: none;
  animation: empPulse 1.5s ease-in-out infinite;
}

#progress:hover #progress-dot {
  display: block;
  animation: empPulse 2s ease-in-out infinite;
}

#progress-dot.active {
  fill: #002fa7 !important;
  animation: activePulse 1s ease-in-out infinite !important;
}
/* Êó∂Èó¥ÊòæÁ§∫Ê†∑Âºè */
.track-time {
  grid-area: five;
  display: flex;
  justify-content: space-around;
  align-items: flex-start;
}

#currentTime, #durationTime {
  font-family: "Rubik Wet Paint", sans-serif;
  font-size: 1rem;
}

#currentTime {
  color: white;
}

#durationTime {
  color: #fdfdfd;
  text-shadow: 0 0 15px white;
}
